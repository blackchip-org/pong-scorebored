package us.praefectus.scorebored;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class JacobExcusesFrame extends javax.swing.JFrame {
    
    private JacobExcuses jacobExcuses;
    private String defaultExcuse = "Select excuse to edit or enter new excuse";    
    public JacobExcusesFrame() {
        jacobExcuses = new JacobExcuses();
      
        initComponents();
        this.resetModel();
    }
    
    private void resetModel() {
        DefaultListModel newModel = new DefaultListModel();
        for(String s : jacobExcuses.getJacobExcuseList()) {
            newModel.addElement(s);
        }
        excuseList.setListData(new String[0]);
        excuseList.setModel(newModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        excuseList = new javax.swing.JList();
        editText = new javax.swing.JTextField();
        deleteExcuse = new javax.swing.JButton();
        saveExcuse = new javax.swing.JButton();

        excuseList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        excuseList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        excuseList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                setExcusesText(evt);
            }
        });
        jScrollPane1.setViewportView(excuseList);

        editText.setText("Select excuse to edit or enter new excuse");
        editText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTextActionPerformed(evt);
            }
        });
        editText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                removeDefault(evt);
            }
        });

        deleteExcuse.setText("Delete");
        deleteExcuse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteExcuse(evt);
            }
        });
        deleteExcuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteExcuseActionPerformed(evt);
            }
        });

        saveExcuse.setText("Add Excuse");
        saveExcuse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveExcuse(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(87, 87, 87)
                        .add(deleteExcuse)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(saveExcuse)
                        .add(0, 68, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, editText)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1))
                .add(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 186, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(editText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(deleteExcuse)
                    .add(saveExcuse))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setExcusesText(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_setExcusesText
        if(excuseList.getSelectedValue() != null) {
            editText.setText(excuseList.getSelectedValue().toString());
        }
        else {
           editText.setText(defaultExcuse); 
        }      
    }//GEN-LAST:event_setExcusesText

    private void editTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTextActionPerformed

    private void saveExcuse(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveExcuse
        int removeIndex = excuseList.getSelectedIndex();     
        if(removeIndex >= 0 || !editText.getText().equals(defaultExcuse)) {
            String newExcuse = editText.getText();             
            //jacobExcuses.removeExcuse(excuseList.getSelectedValue().toString(), removeIndex);
            Boolean check = jacobExcuses.addExcuse(newExcuse); 
            this.resetModel();
            if(check){
                JOptionPane.showMessageDialog(null, "This Awesome excuse already exists.");
            }
        }     
    }//GEN-LAST:event_saveExcuse

    private void deleteExcuse(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteExcuse
        int deleteIndex = excuseList.getSelectedIndex();
        if(deleteIndex >= 0) {
            String dltExcuse = editText.getText();
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int result = JOptionPane.showConfirmDialog(null, "Are you sure you wish "
                    + "to delete this Fantastic Excuse??", "Warning", dialogButton);
            if(result == JOptionPane.YES_OPTION) {
                Boolean successful = jacobExcuses.removeExcuse(dltExcuse, deleteIndex);
                this.resetModel();
                if(successful){
                    JOptionPane.showMessageDialog(null, "Deleted Successfully");
                }
            }
        }       
    }//GEN-LAST:event_deleteExcuse

    private void deleteExcuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteExcuseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteExcuseActionPerformed

    private void removeDefault(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_removeDefault
        if(editText.getText().equals(defaultExcuse)) {
           editText.selectAll(); 
        }      
    }//GEN-LAST:event_removeDefault

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteExcuse;
    private javax.swing.JTextField editText;
    private javax.swing.JList excuseList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveExcuse;
    // End of variables declaration//GEN-END:variables
}
